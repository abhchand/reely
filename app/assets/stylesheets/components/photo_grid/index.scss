.photo-grid-container {
  display: block;
  width: 100%;
}

.photo-grid {
  margin: auto;
  margin-top: 35px;

  &:focus {
    outline: 0;
  }

  @include breakpoint($screen-xs) {
    margin: 35px 0 0 0;
  }
}

.photo-grid__content {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-content: flex-start;
  width: 100%;
  margin-top: 10px;
  font-size: 0;
  background-color: $white;
}

.photo-grid__photo-container {
  position: relative;
  flex: auto;

  // Widths dictate the maximun number of photos per row (e.g. 25% = 4 photos)
  // Setting padding-bottom equal to the widths maintains the square aspect
  // ratio
  width: calc(100% / 4);
  max-width: calc(100% / 4);
  padding-bottom: calc(100% / 4);
  border-width: 1px;

  border-style: solid;
  border-color: $white;

  @include breakpoint($screen-xs) {
    width: calc(100% / 3);
    max-width: calc(100% / 3);
    padding-bottom: calc(100% / 3);
  }

  // Introduce a midway point between screen-xs and screen-sm to make
  // the responsive transitions work a bit better
  @media screen and (min-width: 680px) {
    width: calc(100% / 4);
    max-width: calc(100% / 4);
    padding-bottom: calc(100% / 4);
  }

  @include breakpoint($screen-sm) {
    width: calc(100% / 5);
    max-width: calc(100% / 5);
    padding-bottom: calc(100% / 5);
  }

  @include breakpoint($screen-md) {
    width: calc(100% / 6);
    max-width: calc(100% / 6);
    padding-bottom: calc(100% / 6);
  }

  @include breakpoint($screen-lg) {
    width: calc(100% / 7);
    max-width: calc(100% / 7);
    padding-bottom: calc(100% / 7);
  }
}

.photo-grid__photo {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-repeat: no-repeat;
  background-position: center center;

  background-size: cover;
  cursor: pointer;

  transition: all 0.10s linear;

  .photo-grid--selection-mode-enabled & {
    top: 2px;
    right: 2px;
    bottom: 2px;
    left: 2px;
  }
}

.photo-grid__photo-overlay {
  width: 100%;
  height: 100%;
  padding-top: 3%;
  padding-bottom: 3%;

  padding-left: 5%;

  text-align: left;

  background: $black-opacity;

  opacity: 0;
  -webkit-transition: opacity 0.25s ease;
  -moz-transition: opacity 0.25s ease;

  @include breakpoint($screen-xs) {
    &:hover {
      opacity: 1;
    }
  }

  // Somewhat of an animation hack. When photos are selected but selection mode
  // is disabled, the photo overlay renders the taken at lable, which shows
  // up for a brief second before dissappearing. This is because both overlays
  // use the same class rules.
  // To solve this, the the above opacity / hover rules should also apply to
  // the taken-at label child element as well.
  .photo-grid__taken-at-label { opacity: 0; }
  @include breakpoint($screen-xs) {
    &:hover .photo-grid__taken-at-label { opacity: 1; }
  }
}

.photo-grid__photo-selected-overlay {
  @extend .photo-grid__photo-overlay;
  padding: 0;
  text-align: center;
  border: 2px solid $leaf-green;

  opacity: 1;

  svg {
    @extend .vertical-align;
    width: 36px;
    height: 36px;
  }

  @include breakpoint($screen-xs) {
    svg {
      width: 48px;
      height: 48px;
    }
  }
}

.photo-grid__taken-at-label {
  font-weight: 500;

  @include breakpoint($screen-xs) {
    // Display block allows margin-bottom to be set
    display: block;
    margin-bottom: 3%;
    color: $white;
    font-size: 10px;
  }

  @include breakpoint($screen-sm) {
    font-size: 12px;
  }

  @include breakpoint($screen-md) {
    font-size: 14px;
  }

  @include breakpoint($screen-lg) {
    font-size: 16px;
  }
}
